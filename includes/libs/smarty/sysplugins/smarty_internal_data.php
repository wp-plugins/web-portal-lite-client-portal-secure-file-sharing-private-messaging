<?php
 class Smarty_Internal_Data { public $template_class = 'Smarty_Internal_Template'; public $tpl_vars = array(); public $parent = null; public $config_vars = array(); public function assign($tpl_var, $value = null, $nocache = false) { if (is_array($tpl_var)) { foreach ($tpl_var as $_key => $_val) { if ($_key != '') { $this->tpl_vars[$_key] = new Smarty_variable($_val, $nocache); } } } else { if ($tpl_var != '') { $this->tpl_vars[$tpl_var] = new Smarty_variable($value, $nocache); } } return $this; } public function assignGlobal($varname, $value = null, $nocache = false) { if ($varname != '') { Smarty::$global_tpl_vars[$varname] = new Smarty_variable($value, $nocache); } return $this; } public function assignByRef($tpl_var, &$value, $nocache = false) { if ($tpl_var != '') { $this->tpl_vars[$tpl_var] = new Smarty_variable(null, $nocache); $this->tpl_vars[$tpl_var]->value = &$value; } return $this; } public function append($tpl_var, $value = null, $merge = false, $nocache = false) { if (is_array($tpl_var)) { foreach ($tpl_var as $_key => $_val) { if ($_key != '') { if (!isset($this->tpl_vars[$_key])) { $tpl_var_inst = $this->getVariable($_key, null, true, false); if ($tpl_var_inst instanceof Undefined_Smarty_Variable) { $this->tpl_vars[$_key] = new Smarty_variable(null, $nocache); } else { $this->tpl_vars[$_key] = clone $tpl_var_inst; } } if (!(is_array($this->tpl_vars[$_key]->value) || $this->tpl_vars[$_key]->value instanceof ArrayAccess)) { settype($this->tpl_vars[$_key]->value, 'array'); } if ($merge && is_array($_val)) { foreach($_val as $_mkey => $_mval) { $this->tpl_vars[$_key]->value[$_mkey] = $_mval; } } else { $this->tpl_vars[$_key]->value[] = $_val; } } } } else { if ($tpl_var != '' && isset($value)) { if (!isset($this->tpl_vars[$tpl_var])) { $tpl_var_inst = $this->getVariable($tpl_var, null, true, false); if ($tpl_var_inst instanceof Undefined_Smarty_Variable) { $this->tpl_vars[$tpl_var] = new Smarty_variable(null, $nocache); } else { $this->tpl_vars[$tpl_var] = clone $tpl_var_inst; } } if (!(is_array($this->tpl_vars[$tpl_var]->value) || $this->tpl_vars[$tpl_var]->value instanceof ArrayAccess)) { settype($this->tpl_vars[$tpl_var]->value, 'array'); } if ($merge && is_array($value)) { foreach($value as $_mkey => $_mval) { $this->tpl_vars[$tpl_var]->value[$_mkey] = $_mval; } } else { $this->tpl_vars[$tpl_var]->value[] = $value; } } } return $this; } public function appendByRef($tpl_var, &$value, $merge = false) { if ($tpl_var != '' && isset($value)) { if (!isset($this->tpl_vars[$tpl_var])) { $this->tpl_vars[$tpl_var] = new Smarty_variable(); } if (!is_array($this->tpl_vars[$tpl_var]->value)) { settype($this->tpl_vars[$tpl_var]->value, 'array'); } if ($merge && is_array($value)) { foreach($value as $_key => $_val) { $this->tpl_vars[$tpl_var]->value[$_key] = &$value[$_key]; } } else { $this->tpl_vars[$tpl_var]->value[] = &$value; } } return $this; } public function getTemplateVars($varname = null, $_ptr = null, $search_parents = true) { if (isset($varname)) { $_var = $this->getVariable($varname, $_ptr, $search_parents, false); if (is_object($_var)) { return $_var->value; } else { return null; } } else { $_result = array(); if ($_ptr === null) { $_ptr = $this; } while ($_ptr !== null) { foreach ($_ptr->tpl_vars AS $key => $var) { if (!array_key_exists($key, $_result)) { $_result[$key] = $var->value; } } if ($search_parents) { $_ptr = $_ptr->parent; } else { $_ptr = null; } } if ($search_parents && isset(Smarty::$global_tpl_vars)) { foreach (Smarty::$global_tpl_vars AS $key => $var) { if (!array_key_exists($key, $_result)) { $_result[$key] = $var->value; } } } return $_result; } } public function clearAssign($tpl_var) { if (is_array($tpl_var)) { foreach ($tpl_var as $curr_var) { unset($this->tpl_vars[$curr_var]); } } else { unset($this->tpl_vars[$tpl_var]); } return $this; } public function clearAllAssign() { $this->tpl_vars = array(); return $this; } public function configLoad($config_file, $sections = null) { $config = new Smarty_Internal_Config($config_file, $this->smarty, $this); $config->loadConfigVars($sections); return $this; } public function getVariable($variable, $_ptr = null, $search_parents = true, $error_enable = true) { if ($_ptr === null) { $_ptr = $this; } while ($_ptr !== null) { if (isset($_ptr->tpl_vars[$variable])) { return $_ptr->tpl_vars[$variable]; } if ($search_parents) { $_ptr = $_ptr->parent; } else { $_ptr = null; } } if (isset(Smarty::$global_tpl_vars[$variable])) { return Smarty::$global_tpl_vars[$variable]; } if ($this->smarty->error_unassigned && $error_enable) { $x = $$variable; } return new Undefined_Smarty_Variable; } public function getConfigVariable($variable, $error_enable = true) { $_ptr = $this; while ($_ptr !== null) { if (isset($_ptr->config_vars[$variable])) { return $_ptr->config_vars[$variable]; } $_ptr = $_ptr->parent; } if ($this->smarty->error_unassigned && $error_enable) { $x = $$variable; } return null; } public function getStreamVariable($variable) { $_result = ''; $fp = fopen($variable, 'r+'); if ($fp) { while (!feof($fp) && ($current_line = fgets($fp)) !== false ) { $_result .= $current_line; } fclose($fp); return $_result; } if ($this->smarty->error_unassigned) { throw new SmartyException('Undefined stream variable "' . $variable . '"'); } else { return null; } } public function getConfigVars($varname = null, $search_parents = true) { $_ptr = $this; $var_array = array(); while ($_ptr !== null) { if (isset($varname)) { if (isset($_ptr->config_vars[$varname])) { return $_ptr->config_vars[$varname]; } } else { $var_array = array_merge($_ptr->config_vars, $var_array); } if ($search_parents) { $_ptr = $_ptr->parent; } else { $_ptr = null; } } if (isset($varname)) { return ''; } else { return $var_array; } } public function clearConfig($varname = null) { if (isset($varname)) { unset($this->config_vars[$varname]); } else { $this->config_vars = array(); } return $this; } } class Smarty_Data extends Smarty_Internal_Data { public $smarty = null; public function __construct ($_parent = null, $smarty = null) { $this->smarty = $smarty; if (is_object($_parent)) { $this->parent = $_parent; } elseif (is_array($_parent)) { foreach ($_parent as $_key => $_val) { $this->tpl_vars[$_key] = new Smarty_variable($_val); } } elseif ($_parent != null) { throw new SmartyException("Wrong type for template variables"); } } } class Smarty_Variable { public $value = null; public $nocache = false; public $scope = Smarty::SCOPE_LOCAL; public function __construct($value = null, $nocache = false, $scope = Smarty::SCOPE_LOCAL) { $this->value = $value; $this->nocache = $nocache; $this->scope = $scope; } public function __toString() { return (string) $this->value; } } class Undefined_Smarty_Variable { public function __get($name) { if ($name == 'nocache') { return false; } else { return null; } } public function __toString() { return ""; } } ?>